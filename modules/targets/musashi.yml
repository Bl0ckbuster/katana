---

name: musashi
category: targets
description: A set of labs for understanding modern application features.
href: http://cors-dojo.wtf

install:
  - name: Get the latest release of musashi
    git:
      repo: https://github.com/SamuraiWTF/musashi-js.git
      dest: /opt/targets/musashi

  - name: Install musashi with yarn
    yarn:
      path: /opt/targets/musashi

  - name: Script to start Musashi
    copy:
      dest: /usr/local/bin/start_musashi.sh
      content: |
        #!/bin/bash

        cd /opt/targets/musashi
        yarn start &
      mode: 0744

  - name: Create service descriptor for wtf-musashi.service
    copy:
      dest: /etc/systemd/system/wtf-musashi.service
      content: |
        [Unit]
        Description=Musashi Target service
        [Service]
        Type=forking
        ExecStart=/usr/local/bin/start_musashi.sh
        [Install]
        WantedBy=multi-user.target
      mode: 0744

  - name: Generate musashi .env file
    copy:
      dest: /opt/targets/musashi/.env
      content: |
        CORS_API_PORT=3020
        CORS_API_HOST=api.cors.dem
        CORS_CLIENT_HOST=cors-dojo.wtf
        CORS_CLIENT_PORT=3021
        OAUTH_PROVIDER_PORT=3030
        OAUTH_CLIENT_PORT=3031
        CSP_APP_PORT=3041
        USE_TLS=FALSE
      mode: 0744

  - name: Setup hosts file entries
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   cors-dojo.wtf'

  - name: Setup nginx reverse-proxy config for CORS client
    copy:
      dest: /etc/nginx/conf.d/musashi-cors-client.conf
      content: |
        server {
          listen 80;
          server_name cors-dojo.wtf;
          location / {
            proxy_pass http://localhost:3021;
          }
        }
      mode: 0644

  - name: Setup hosts file entries for api
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.9   api.cors.dem'

  - name: Setup nginx reverse-proxy config for CORS API
    copy:
      dest: /etc/nginx/conf.d/musashi-cors-api.conf
      content: |
        server {
          listen 80;
          server_name api.cors.dem;
          location / {
            proxy_pass http://localhost:3020;
          }
        }
      mode: 0644

  - name: Setup hosts file entries
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   csp-dojo.wtf'

  - name: Setup nginx reverse-proxy config for CSP client
    copy:
      dest: /etc/nginx/conf.d/musashi-csp-client.conf
      content: |
        server {
          listen 80;
          server_name csp-dojo.wtf;
          location / {
            proxy_pass http://localhost:3041;
          }
        }
      mode: 0644


  - name: Setup hosts file entries
    lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   jwt.demo'

  - name: Setup nginx reverse-proxy config for CORS client
    copy:
      dest: /etc/nginx/conf.d/jwt-demo.conf
      content: |
        server {
          listen 80;
          server_name jwt.demo;
          location / {
            proxy_pass http://localhost:3050;
          }
        }
      mode: 0644


  - service:
      name: nginx
      state: restarted
  - command:
      cmd: systemctl daemon-reload

remove:
  - service:
      name: wtf-musashi
      state: stopped
  - rm:
      path:
        - /opt/targets/musashi
        - /usr/local/bin/start_musashi.sh
        - /etc/systemd/system/wtf-musashi.service
        - /etc/nginx/conf.d/musashi-cors-client.conf
        - /etc/nginx/conf.d/musashi-cors-api.conf
        - /etc/nginx/conf.d/musashi-csp.conf
        - /etc/nginx/conf.d/jwt-demo.conf
        - /opt/targets/musashi/.env

  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   cors-dojo.wtf'
      state: absent
  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   api.cors.dem'
      state: absent
  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   csp-dojo.wtf'
      state: absent
  - lineinfile:
      dest: /etc/hosts
      line: '127.0.0.8   jwt.demo'
      state: absent


  - service:
      name: nginx
      state: restarted
  - command:
      cmd: systemctl daemon-reload


start:
  - service:
      name: wtf-musashi
      state: running

stop:
  - service:
      name: wtf-musashi
      state: stopped

status:
  running:
    started:
      service: wtf-musashi
  installed:
    exists:
      path: /opt/targets/musashi
